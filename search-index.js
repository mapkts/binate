var searchIndex = JSON.parse('{\
"binate":{"doc":"Implementation of the RSocket protocol.","t":[13,13,4,13,13,6,3,6,13,13,6,6,3,3,8,13,13,13,6,13,11,11,11,11,11,11,0,11,10,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,0,10,10,10,11,11,11,11,11,11,11,11,11,13,13,13,4,8,13,3,3,13,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,13,18,13,8,4,13,13,8,13,18,3,4,4,18,13,13,13,13,13,18,13,18,17,17,18,13,18,13,18,13,13,13,13,13,13,13,18,13,18,13,13,13,13,13,13,13,13,13,13,3,13,16,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,18,18,18,3,3,18,18,3,3,18,18,3,3,18,18,18,3,3,3,3,3,3,3,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,17,6,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ApplicationError","Canceled","Code","ConnectionClose","ConnectionError","Data","Error","Flux","Invalid","InvalidSetup","Metadata","Mono","Payload","PayloadBuilder","RSocket","Rejected","RejectedResume","RejectedSetup","Result","UnsupportedSetup","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connection","eq","fire_and_forget","fmt","fmt","fmt","frame","from","from","from","from","into","into","is_application_error","is_cancel","is_connection_close","is_connection_error","is_decode","is_invalid","is_invalid_setup","is_protocol","is_rejected","is_rejected_resume","is_rejected_setup","is_setup","is_unsupported_setup","metadata_push","mimetype","prelude","request_channel","request_response","request_stream","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Closed","Connected","Connecting","ConnectionStatus","DuplexConnection","Error","RequestCounter","StreamIdProvider","Unconnected","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","connect","connection_status","dec","eq","fmt","fmt","fmt","from","from","from","into","into","into","is_zero","load","ne","new","new_for_client","new_for_server","next_stream_id","receive","send","send_and_forget","send_stream","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","CANCEL","COMPLETE","Cancel","Decode","DecodeError","ERROR","EXT","Encode","Error","FOLLOWS","Flags","Frame","FrameType","IGNORE","InComplete","InvalidStreamId","KEEPALIVE","Keepalive","LEASE","LEASE","Lease","MAX","MAX_U31","MAX_U63","METADATA","METADATA_PUSH","MIN","MetadataPush","NEXT","PAYLOAD","Payload","REQUEST_CHANNEL","REQUEST_FNF","REQUEST_N","REQUEST_RESPONSE","REQUEST_STREAM","RESPOND","RESUME","RESUME","RESUME_OK","RequestChannel","RequestFnf","RequestN","RequestResponse","RequestStream","Resume","ResumeOk","SETUP","Setup","U24","UnrecognizedFrameType","Value","Version","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","codec","contains","decode","decode","default","empty","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_u32","from_usize","from_value","hash","insert","intersects","into","into","into","into","into","into","into_u32","into_usize","is_all","is_complete","is_empty","is_empty","is_empty","is_follows","is_ignore","is_lease","is_metadata","is_next","is_respond","is_resume","len","len","len","len","major","minor","ne","ne","ne","ne","ne","new","new","not","partial_cmp","partial_cmp","remove","set","sub","sub_assign","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","0","expected","found","0","0","0","0","0","0","0","0","0","0","0","0","0","0","APPLICATION_ERROR","CANCELED","CONNECTION_CLOSE","CONNECTION_ERROR","CancelFrame","ErrorFrame","INVALID","INVALID_SETUP","KeepaliveFrame","LeaseFrame","MAX_APPLICATION_ERROR_CODE","MIN_APPLICATION_ERROR_CODE","MetadataPushFrame","PayloadFrame","REJECTED","REJECTED_RESUME","REJECTED_SETUP","RequestChannelFrame","RequestFnfFrame","RequestNFrame","RequestResponseFrame","RequestStreamFrame","ResumeFrame","ResumeOkFrame","STREAM_ID","STREAM_ID","STREAM_ID","STREAM_ID","STREAM_ID","STREAM_ID","SetupFrame","SetupFrameBuilder","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","TYPE","UNSUPPORTED_SETUP","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","data","data","data","data","data","data_mimetype","data_utf8","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error_code","first_available_client_position","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","initial_request_n","initial_request_n","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_complete","is_complete","is_follows","is_follows","is_follows","is_follows","is_follows","is_lease","is_next","is_respond","is_resume","keepalive_interval","keepalive_timeout","last_received_position","last_received_server_position","last_received_server_position","len","len","len","len","len","len","len","len","len","len","len","len","len","len","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata_mimetype","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","number_of_requests","payload","payload","payload","payload","payload","payload","request_data","request_n","resume_token","resume_token","set_data","set_data_mimetype","set_keepalive_interval","set_keepalive_timeout","set_lease_flag","set_metadata","set_metadata_mimetype","set_resume_flag","set_resume_token","set_version","stream_id","stream_id","stream_id","stream_id","stream_id","stream_id","stream_id","stream_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","APPLICATION_AVRO","APPLICATION_CBOR","APPLICATION_CLOUDEVENTS_JSON","APPLICATION_GRAPHQL","APPLICATION_GZIP","APPLICATION_JAVASCRIPT","APPLICATION_JSON","APPLICATION_OCTET_STREAM","APPLICATION_PDF","APPLICATION_VND_APACHE_THRIFT_BINARY","APPLICATION_VND_GOOGLE_PROTOBUF","APPLICATION_XML","APPLICATION_X_HESSIAN","APPLICATION_X_JAVA_OBJECT","APPLICATION_ZIP","AUDIO_AAC","AUDIO_MP3","AUDIO_MP4","AUDIO_MPEG","AUDIO_MPEG3","AUDIO_OGG","AUDIO_OPUS","AUDIO_VORBIS","DEFAULT_MIMETYPE","IMAGE_BMP","IMAGE_GIF","IMAGE_HEIC","IMAGE_HEIC_SEQUENCE","IMAGE_HEIF","IMAGE_HEIF_SEQUENCE","IMAGE_JPEG","IMAGE_PNG","IMAGE_TIFF","MESSAGE_X_RSOCKET_ACCEPT_TIME_TYPES_V0","MESSAGE_X_RSOCKET_AUTHENTICATION_V0","MESSAGE_X_RSOCKET_COMPOSITE_METADATA_V0","MESSAGE_X_RSOCKET_MIME_TYPE_V0","MESSAGE_X_RSOCKET_ROUTING_V0","MESSAGE_X_RSOCKET_TRACING_ZIPKIN_V0","MULTIPART_MIXED","TEXT_CSS","TEXT_CSV","TEXT_HTML","TEXT_PLAIN","TEXT_XML","UNPARSEABLE","VIDEO_H264","VIDEO_H265","VIDEO_VP8","WellKnownMimeType","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","to_owned","try_from","try_into","type_id","DEFAULT_MIMETYPE","Data","Metadata","Payload","PayloadBuilder","PayloadChunks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","chunks","clone","clone_into","data","data_utf8","default","encode","eq","fmt","fmt","fmt","from","from","from","has_data","has_metadata","into","into","into","into_iter","is_empty","len","len","len","metadata","metadata_utf8","ne","new","next","set_data","set_metadata","split","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["binate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","binate::connection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","binate::connection::ConnectionStatus","binate::framebinate::frame::DecodeError","","","binate::frame::Frame","","","","","","","","","","","","","","binate::frame::codecbinate::mimetype","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","binate::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Application layer logic generating a Reactive Streams …","The Responder canceled the request but may have started …","RSocket protocol error codes.","The connection is being terminated. Sender or Receiver of …","The connection is being terminated. Sender or Receiver of …","The data field of a <code>Payload</code>.","Errors that can occur when handling RSocket streams.","A stream of values that produced asynchronously.","The request is invalid.","The Setup frame is invalid for the server (it could be …","The meatadata field of a <code>Payload</code>.","A stream that emits a value exactly once.","Payload of a RSocket frame.","Construct a <code>Payload</code> with optional <code>Data</code> and/or <code>Metadata</code>.","A trait that represents a Reactive Socket.","Despite being a valid request, the Responder decided to …","The server rejected the resume, it can specify the reason …","The server rejected the setup, it can specify the reason …","A specialized <code>Result</code> for RSocket operations.","Some (or all) of the parameters specified by the client …","","","","","","","RSocket transport session between client and server.","","Fire-and-Forget interaction model of RSocket.","","","","Provides the <code>Frame</code> type that represents a RSocket protocol …","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this is protocol error <code>APPLICATION_ERROR</code>.","Returns true if this is protocol error <code>CANCELED</code>.","Returns true if this is protocol error <code>CONNECTION_CLOSE</code>.","Returns true if this is protocol error <code>CONNECTION_ERROR</code>.","Returns true if this error is related to decoding <code>Bytes</code>.","Returns true if this is protocol error <code>INVALID</code>.","Returns true if this is protocol error <code>INVALID_SETUP</code>.","Returns true if this error is a RSocket protocol error.","Returns true if this is protocol error <code>REJECTED</code>.","Returns true if this is protocol error <code>REJECTED_RESUME</code>.","Returns true if this is protocol error <code>REJECTED_SETUP</code>.","Returns true if this error is related to connection setup.","Returns true if this is protocol error <code>UNSUPPORTED_SETUP</code>.","Metadata-Push interaction model of RSocket.","A list of wellknown MIME types.","The RSocket prelude.","Request-Channel interaction model of RSocket.","Request-Response interaction model of RSocket.","Request-Stream interaction model of RSocket.","","","","","","","","","","Connection has been closed via <code>close()</code>.","Connection is established.","<code>connect()</code> is called but a connection is not yet …","Describes connection status.","Represents a network connection over <code>RSocket</code> to …","Connection has been closed for any other reason.","Atomic counter for counting request permits.","Thread safe stream ID provider.","No connection established or pending.","Adds permits to this counter.","","","","","","","","","Close the underlying connection.","Open the underlying connection.","Returns a stream that immediately publishes the currrent …","Decrements this counter by 1, and returns the previous …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if counter has reaching zero.","Returns the count this counter stores.","","Create a new <code>RequestCounter</code>.","Create a client-side <code>StreamIdProvider</code>.","Create a server-side <code>StreamIdProvider</code>.","Returns the next available stream ID.","Returns a stream of frames received on this connection.","Send a frame to the remote peer.","Similar to <code>send</code>, but doesn’t wait for response.","Send a stream of frames to the remote peer.","","","","","","","","","","","","Cancel outstanding request.","Bit to indicate stream completion.","The CANCEL frame.","A trait for decoding bytes into a frame.","Errors that can occur when decoding bytes into a specific …","Error at connection or application level.","Used To Extend more frame types as well as extensions.","A trait for encoding a frame into bytes.","The ERROR frame.","More fragments follow this fragment.","Frame header flags.","A frame in the RSocket protocol.","Type of frame.","The frame can be ignored.","Not enough data is available to parse a frame.","The decoded stream ID is invalid.","Connection keepalive.","The KEEPALIVE frame.","Sent by Responder to grant the ability to send requests.","Will honor LEASE.","The LEASE frame.","The maximum value <code>U24</code> can hold.","The maximum value 31-bit unsigned integer can hold.","The maximum value 63-bit unsigned integer can hold.","Metadata present.","Asynchronous Metadata frame","The minimum value <code>U24</code> can hold.","The METADATA_PUSH frame.","Bit to indicate Next (Payload Data and/or Metadata …","Payload on a stream. For example, response to a request, …","The PAYLOAD frame.","Request a completable stream in both directions.","A single one-way message.","Request N more items with Reactive Streams semantics.","Request single response.","Request a completable stream.","Respond with KEEPALIVE.","Replaces SETUP for Resuming Operation (optional)","Client requests resume capability if possible.","Sent in response to a RESUME if resuming operation …","The REQUEST_CHANNEL frame.","The REQUEST_FNF frame.","The REQUEST_N frame.","The REQUEST_RESPONSE frame.","The REQUEST_STREAM frame.","The RESUME frame.","The RESUME_OK frame.","Sent by client to initiate protocol processing.","The SETUP frame.","The 24-bit unsigned integer type.","The decoded frame type is unrecognized.","The value decoded into.","Version number of the RSocket protocol.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Convert this frame type to a bit representation, with the …","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of RSocket frame types and frame codec.","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Decodes the given bytes into a frame.","Decode the given bytes into a frame.","","Returns an empty set of flags","Encodes <code>self</code> into bytes.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, if the bit …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Builds a <code>U24</code> from a <code>u32</code> value.","Builds a <code>U24</code> from a <code>usize</code> value.","Specify the frame type with the raw value described in the …","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts <code>Self</code> into <code>u32</code>.","Converts <code>Self</code> into <code>usize</code>.","Returns <code>true</code> if all flags are currently set.","Returns true if the Flags have the COMPLETE bit set.","Returns whether this value is empty.","Returns whether this value is empty.","Returns <code>true</code> if no flags are currently stored.","Returns true if the Flags have the FOLLOWS bit set.","Returns true if the Flags have the IGNORE bit set.","Returns true if the Flags have the LEASE bit set.","Returns true if the Flags have the METADATA bit set.","Returns true if the Flags have the NEXT bit set.","Returns true if the Flags have the RESPOND bit set.","Returns true if the Flags have the RESUME bit set.","Returns the length (in bytes) of this value.","","","","Returns the <code>major</code> number of this version.","Returns the <code>minor</code> number of this version.","","","","","","Builds a <code>U24</code> from the given <code>higher_bits</code> and <code>lower_bits</code>.","Builds the protocol version with the given <code>major</code> and <code>minor</code> …","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Encodes <code>self</code> into bytes.","Encodes <code>self</code> into bytes.","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the corresponding raw value of this frame type. …","","expected stream ID","found stream ID","","","","","","","","","","","","","","","Application layer logic generating a <code>Reactive Streams</code> …","The Responder canceled the request but may have started …","The connection is being terminated.","The connection is being terminated.","The cancel frame.","The error frame.","The request is invalid. Stream ID MUST be &gt; 0.","The Setup frame is invalid for the server (it could be …","The keepalive frame.","The lease frame.","The maximum error code that can used as application layer …","The minimum error code that can used as application layer …","The meatadata_push frame.","The payload frame.","Despite being a valid request, the Responder decided to …","The server rejected the resume, it can specify the reason …","The server rejected the setup, it can specify the reason …","The request_channel frame.","The request_fnf (Fire-n-Forget) frame.","The request_n frame.","The request_response frame.","The request_stream frame.","The resume frame.","The resume_ok frame.","KEEPALIVE frames MUST always use Stream ID 0 as they …","Lease frames MUST always use Stream ID 0 as they pertain …","METADATA_PUSH frames MUST always use Stream ID 0 as they …","RESUME frames MUST always use Stream ID 0 as they pertain …","RESUME OK frames MUST always use Stream ID 0 as they …","Setup frames MUST always use Stream ID 0 as they pertain …","The setup frame.","A builder for configuring the setup frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Type of this frame.","Some (or all) of the parameters specified by the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>SetupFrame</code> from this builder.","Returns a <code>SetupFrameBuilder</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the error data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the data attached to this frame, if any.","Returns the MIME type for encoding the data.","Returns the error data in this error frame in UTF-8 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the error code in this error frame.","Returns the earliest position that the client can rewind …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the initial number of items to request.","Returns the initial number of items to request.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this frame has the COMPLETE flag set.","Returns true if this frame has the COMPLETE flag set.","Returns true if this frame has the FOLLOWS flag set.","Returns true if this frame has the FOLLOWS flag set.","Returns true if this frame has the FOLLOWS flag set.","Returns true if this frame has the FOLLOWS flag set.","Returns true if this frame has the FOLLOWS flag set.","Returns true if the flags have the LEASE bit set.","Returns true if this frame has the NEXT flag set.","Returns true if this frame has the Respond flag set.","Returns true if the flags have the RESUME bit set.","Returns the time between KEEPALIVE frames that the client …","Returns the time that a client will allow a server to not …","Returns the last received position of this frame.","Returns the last implied position the client received from …","Returns the last implied position the server received from …","","","","","","","","","","","","","","","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the metadata attached to this frame, if any.","Returns the MIME type for encoding the medadata.","","","","","","","","","","","","","","","Create a new <code>Cancel</code> frame.","Create a new <code>ErrorFrame</code>.","Create a new <code>Keepalive</code> frame.","Create a new <code>Lease</code> frame.","Create a <code>MetadataPush</code> frame.","Create a new <code>Payload</code> frame.","Create a new <code>RequestChannel</code> frame.","Create a new <code>RequestFnf</code> frame.","Create a new <code>RequestN</code> frame.","Create a new <code>RequestResponse</code> frame.","Create a new <code>RequestStream</code> frame.","Create a new <code>Resume</code> frame.","Create a new <code>ResumeOk</code> frame.","Returns the number of requests that may be sent until next …","Returns the payload attached to this frame.","Returns the payload attached to this frame.","Returns the payload attached to this frame.","Returns the payload attached to this frame.","Returns the payload attached to this frame.","Returns the payload of this setup frame.","Returns the request data attached to this frame, if any.","Returns the number of items to request.","Returns the resume identification token.","Returns the resume identification token (not present if …","Sets the data payload of this setup frame.","Sets the data mimetype.","Sets the interval (in milliseconds) between two KEEPALIVE …","Sets the time (in milliseconds) that a client will allow a …","Sets the <code>Lease</code> flag.","Sets the metadata payload of this setup frame.","Sets the metadata mimetype.","Sets the <code>Resume</code> flag.","Sets the resume identification token.","Sets the RSocket protocol version.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","Returns the stream ID of this frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the validity time (in milliseconds) of LEASE from …","","","","","","","","","","","","","","","","Returns the version field of this frame.","Returns the protocol version.","","","","","","","","","","","","","","","","","","","","","","","","Default mimetype for encoding metadata and data.","","","","","","","","","","","","","","","","","","","","","","","","","","Well-known MIME types.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Default mimetype for encoding metadata and data.","The data field of a <code>Payload</code>.","The meatadata field of a <code>Payload</code>.","Payload of a RSocket frame.","Construct a <code>Payload</code> with optional <code>Data</code> and/or <code>Metadata</code>.","An iterator that yields chunked payload.","","","","","","","Returns the configured <code>Payload</code>.","Returns a payload builder.","Returns a consuming iterator that yields <code>mtu</code> bytes of the …","","","Returns the <code>data</code> part of this payload.","Returns the <code>data</code> part of this payload in UTF-8 format, if …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if this payload contains <code>data</code>.","Returns true if this payload contains <code>metadata</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if this payload is empty.","","Returns the number of bytes in this payload.","Returns the number of chunks in this <code>PayloadChunks</code>.","Returns the <code>metadata</code> part of this payload.","Returns the <code>metadata</code> part of this payload in UTF-8 format, …","","Create a new <code>PayloadBuilder</code>.","","Sets the data of the <code>Payload</code> to build.","Sets the metadata of the <code>Payload</code> to build.","Splits the payload into <code>Metadata</code> and <code>Data</code>.","","","","","","","","","",""],"i":[1,1,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,1,0,1,2,1,2,1,1,1,0,1,3,2,2,1,0,2,2,2,1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,0,3,3,3,2,1,2,2,1,2,1,2,1,4,4,4,0,0,4,0,0,4,5,4,5,6,4,5,6,4,4,7,7,7,5,4,4,5,6,4,5,6,4,5,6,5,5,4,5,6,6,6,7,7,7,7,4,4,5,6,4,5,6,4,5,6,8,9,10,11,0,0,9,9,0,11,10,0,0,0,10,12,12,9,11,9,10,11,13,0,0,10,9,13,11,10,9,11,9,9,9,9,9,10,9,10,9,11,11,11,11,11,11,11,9,11,0,12,14,0,10,10,10,10,10,9,10,10,10,12,9,10,13,15,11,12,9,10,13,15,11,12,9,10,13,15,11,12,9,10,13,15,11,10,15,0,10,14,11,15,10,16,13,15,11,12,9,10,13,15,11,10,12,12,9,10,10,10,10,10,13,15,15,11,12,9,10,13,15,11,9,10,10,10,10,13,13,9,10,10,10,12,9,10,13,15,11,13,13,10,10,16,16,10,10,10,10,10,10,10,10,16,13,15,11,15,15,12,10,13,15,11,13,15,10,10,15,10,10,10,10,16,16,12,9,10,13,15,11,12,15,10,12,9,10,13,15,11,12,9,10,13,15,11,12,9,10,13,15,11,9,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,33,33,0,0,33,33,0,0,33,33,0,0,33,33,33,0,0,0,0,0,0,0,34,35,36,37,38,39,0,0,40,33,34,36,41,42,43,44,45,46,39,33,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,47,39,40,33,34,35,36,41,42,43,44,45,46,37,38,39,40,33,34,35,36,41,42,43,44,45,46,37,38,39,33,34,41,42,45,46,39,39,33,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,40,33,34,35,36,41,42,43,44,45,46,37,38,39,40,33,34,35,36,41,42,43,44,45,46,37,38,39,33,37,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,42,46,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,41,42,41,42,43,45,46,39,41,34,39,39,39,34,37,38,40,33,34,35,36,41,42,43,44,45,46,37,38,39,35,36,41,42,43,45,46,39,39,40,33,34,35,36,41,42,43,44,45,46,37,38,39,40,33,34,35,36,41,42,43,44,45,46,37,38,35,41,42,43,45,46,39,43,44,37,39,47,47,47,47,47,47,47,47,47,47,40,33,41,42,43,44,45,46,40,33,34,35,36,41,42,43,44,45,46,37,38,39,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,35,40,33,34,35,36,41,42,43,44,45,46,37,38,39,47,37,39,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,49,50,51,49,50,51,50,49,49,49,49,49,49,49,49,49,49,50,51,49,50,51,49,49,49,50,51,51,49,49,49,51,49,49,49,50,51,50,50,49,49,49,50,51,49,50,51,49,50,51],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["code",4]],[[["",0],["",0]]],null,[[["",0],["code",4]],["bool",0]],[[["",0],["payload",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,[[]],[[["decodeerror",4]],["error",3]],[[["error",3]],["error",3]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["bytes",3]],["mono",6,[["result",6]]]],null,null,[[["",0],["flux",6,[["result",6,[["payload",3]]]]]],["flux",6,[["result",6,[["payload",3]]]]]],[[["",0],["payload",3]],["mono",6,[["result",6,[["payload",3]]]]]],[[["",0],["payload",3]],["flux",6,[["result",6,[["payload",3]]]]]],[[["",0]],["option",4,[["stderror",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0],["u32",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["connectionstatus",4]],[[["",0],["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["flux",6,[["connectionstatus",4]]]],[[["",0]],["i32",0]],[[["",0],["connectionstatus",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["i32",0]],[[["",0],["connectionstatus",4]],["bool",0]],[[["u32",0]]],[[],["streamidprovider",3]],[[],["streamidprovider",3]],[[["",0],["dashmap",3]],["u32",0]],[[["",0]],["flux",6,[["frame",4]]]],[[["",0],["frame",4]],["mono",6,[["result",6]]]],[[["",0],["frame",4]],["result",6]],[[["",0],["flux",6,[["frame",4]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["flags",3]],[[["flags",3]],["flags",3]],[[["",0],["flags",3]]],[[["flags",3]],["flags",3]],[[["",0],["flags",3]]],[[],["u16",0]],[[["",0]],["u16",0]],[[["flags",3]],["flags",3]],[[["",0],["flags",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["decodeerror",4]],[[["",0]],["frametype",4]],[[["",0]],["flags",3]],[[["",0]],["u24",3]],[[["",0]],["version",3]],[[["",0]],["frame",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["flags",3]],["ordering",4]],[[["",0],["",0]],["ordering",4]],null,[[["",0],["flags",3]],["bool",0]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0]],["result",4,[["decodeerror",4]]]],[[],["version",3]],[[],["flags",3]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["decodeerror",4]],["bool",0]],[[["",0],["frametype",4]],["bool",0]],[[["",0],["flags",3]],["bool",0]],[[["",0],["u24",3]],["bool",0]],[[["",0],["version",3]],["bool",0]],[[["",0],["frame",4]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",0]],["option",4,[["frametype",4]]]],[[["u16",0]],["option",4,[["flags",3]]]],[[["u16",0]],["flags",3]],[[["u16",0]],["flags",3]],[[["intoiterator",8]],["flags",3]],[[["u32",0]]],[[["usize",0]]],[[["u16",0]],["option",4,[["frametype",4]]]],[[["",0],["",0]]],[[["",0],["flags",3]]],[[["",0],["flags",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",0]],[[],["usize",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[],["u16",0]],[[],["u16",0]],[[["",0],["decodeerror",4]],["bool",0]],[[["",0],["flags",3]],["bool",0]],[[["",0],["u24",3]],["bool",0]],[[["",0],["version",3]],["bool",0]],[[["",0],["frame",4]],["bool",0]],[[["u8",0],["u16",0]]],[[["u16",0],["u16",0]]],[[],["flags",3]],[[["",0],["flags",3]],["option",4,[["ordering",4]]]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[["",0],["flags",3]]],[[["",0],["flags",3],["bool",0]]],[[["flags",3]],["flags",3]],[[["",0],["flags",3]]],[[["",0]],["bytes",3]],[[["",0]],["bytes",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["flags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["u16",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullsetupframe",3]],[[],["setupframebuilder",3]],[[["",0]],["cancelframe",3]],[[["",0]],["errorframe",3]],[[["",0]],["keepaliveframe",3]],[[["",0]],["leaseframe",3]],[[["",0]],["metadatapushframe",3]],[[["",0]],["payloadframe",3]],[[["",0]],["requestchannelframe",3]],[[["",0]],["requestfnfframe",3]],[[["",0]],["requestnframe",3]],[[["",0]],["requestresponseframe",3]],[[["",0]],["requeststreamframe",3]],[[["",0]],["resumeframe",3]],[[["",0]],["resumeokframe",3]],[[["",0]],["setupframe",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[["",0],["u32",0],["flags",3]],["result",4,[["decodeerror",4]]]],[[],["setupframebuilder",3]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["bytesmut",3]]],[[["",0],["cancelframe",3]],["bool",0]],[[["",0],["errorframe",3]],["bool",0]],[[["",0],["keepaliveframe",3]],["bool",0]],[[["",0],["leaseframe",3]],["bool",0]],[[["",0],["metadatapushframe",3]],["bool",0]],[[["",0],["payloadframe",3]],["bool",0]],[[["",0],["requestchannelframe",3]],["bool",0]],[[["",0],["requestfnfframe",3]],["bool",0]],[[["",0],["requestnframe",3]],["bool",0]],[[["",0],["requestresponseframe",3]],["bool",0]],[[["",0],["requeststreamframe",3]],["bool",0]],[[["",0],["resumeframe",3]],["bool",0]],[[["",0],["resumeokframe",3]],["bool",0]],[[["",0],["setupframe",3]],["bool",0]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["duration",3]],[[["",0]],["duration",3]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["bytes",3]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["cancelframe",3]],["bool",0]],[[["",0],["errorframe",3]],["bool",0]],[[["",0],["keepaliveframe",3]],["bool",0]],[[["",0],["leaseframe",3]],["bool",0]],[[["",0],["metadatapushframe",3]],["bool",0]],[[["",0],["payloadframe",3]],["bool",0]],[[["",0],["requestchannelframe",3]],["bool",0]],[[["",0],["requestfnfframe",3]],["bool",0]],[[["",0],["requestnframe",3]],["bool",0]],[[["",0],["requestresponseframe",3]],["bool",0]],[[["",0],["requeststreamframe",3]],["bool",0]],[[["",0],["resumeframe",3]],["bool",0]],[[["",0],["resumeokframe",3]],["bool",0]],[[["",0],["setupframe",3]],["bool",0]],[[["u32",0]]],[[["u32",0],["u32",0],["option",4,[["bytes",3]]]]],[[["u64",0],["option",4,[["bytes",3]]],["bool",0]]],[[["u32",0],["u32",0],["option",4,[["bytes",3]]]]],[[["bytes",3]]],[[["u32",0],["flags",3],["payload",3]]],[[["u32",0],["bool",0],["bool",0],["u32",0],["payload",3]]],[[["u32",0],["bool",0],["payload",3]]],[[["u32",0],["u32",0]]],[[["u32",0],["bool",0],["payload",3]]],[[["u32",0],["bool",0],["u32",0],["payload",3]]],[[["version",3],["bytes",3],["u64",0],["u64",0]]],[[["u64",0]]],[[["",0]],["u32",0]],[[],["payload",3]],[[],["payload",3]],[[],["payload",3]],[[],["payload",3]],[[],["payload",3]],[[],["payload",3]],[[["",0]],["option",4,[["bytes",3]]]],[[["",0]],["u32",0]],[[["",0]],["bytes",3]],[[["",0]],["option",4,[["bytes",3]]]],[[["bytes",3]]],[[]],[[["u32",0]]],[[["u32",0]]],[[]],[[["bytes",3]]],[[]],[[]],[[["bytes",3]]],[[["u16",0],["u16",0]]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["duration",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["version",3]],[[["",0]],["version",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["wellknownmimetype",4]],[[["",0],["",0]]],[[["",0],["wellknownmimetype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["str",0]]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["payload",3]],[[],["payloadbuilder",3]],[[["usize",0]],["payloadchunks",3]],[[["",0]],["payload",3]],[[["",0],["",0]]],[[["",0]],["option",4,[["data",6]]]],[[["",0]],["result",4,[["str",0],["utf8error",3]]]],[[],["payload",3]],[[["",0],["bytesmut",3]]],[[["",0],["payload",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["option",4,[["metadata",6]]]],[[["",0]],["result",4,[["str",0],["utf8error",3]]]],[[["",0],["payload",3]],["bool",0]],[[]],[[["",0]],["option",4]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"Code"],[3,"Error"],[8,"RSocket"],[4,"ConnectionStatus"],[3,"RequestCounter"],[3,"StreamIdProvider"],[8,"DuplexConnection"],[13,"Error"],[4,"FrameType"],[3,"Flags"],[4,"Frame"],[4,"DecodeError"],[3,"U24"],[8,"Decode"],[3,"Version"],[8,"Encode"],[13,"UnrecognizedFrameType"],[13,"InvalidStreamId"],[13,"Setup"],[13,"Error"],[13,"Lease"],[13,"Keepalive"],[13,"RequestResponse"],[13,"RequestFnf"],[13,"RequestStream"],[13,"RequestChannel"],[13,"RequestN"],[13,"Cancel"],[13,"Payload"],[13,"MetadataPush"],[13,"Resume"],[13,"ResumeOk"],[3,"ErrorFrame"],[3,"KeepaliveFrame"],[3,"LeaseFrame"],[3,"MetadataPushFrame"],[3,"ResumeFrame"],[3,"ResumeOkFrame"],[3,"SetupFrame"],[3,"CancelFrame"],[3,"PayloadFrame"],[3,"RequestChannelFrame"],[3,"RequestFnfFrame"],[3,"RequestNFrame"],[3,"RequestResponseFrame"],[3,"RequestStreamFrame"],[3,"SetupFrameBuilder"],[4,"WellKnownMimeType"],[3,"Payload"],[3,"PayloadBuilder"],[3,"PayloadChunks"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};